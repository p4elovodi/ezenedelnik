import java.awt.BorderLayout;
import javax.swing.*;


import java.awt.EventQueue;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPanel;

public class DialogTest {

public static void main(String[] args) {
// TODO Auto-generated method stub
EventQueue.invokeLater(new Runnable(){
public void run() {
DialogFrame frame = new DialogFrame ();
frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
frame.setVisible(true);
JPanel panel = new JPanel(); // the panel is not visible in output

JLabel label = new JLabel("Enter Text");

JTextField tf = new JTextField(10); // accepts upto 10 characters


panel.add(tf);



JTextArea ta = new JTextArea();


frame.getContentPane().add(BorderLayout.NORTH, panel);

frame.getContentPane().add(BorderLayout.SOUTH, tf);

frame.setVisible(true);}});
}

}
/**
* Фрейм содержащий меню. При выборе пункта File->About
* отображается диалоговое окно.
*/
class DialogFrame extends JFrame
{
public DialogFrame()
{
setTitle("Еженедельник");
setSize(DEFAULT_WIDTH, DEFAULT_HEIGHT);

// Создание меню File.

JMenuBar menuBar = new JMenuBar();
setJMenuBar(menuBar);
JMenu fileMenu = new JMenu("Выбрать день недели");
menuBar.add(fileMenu);
JMenu fileMenu1 = new JMenu("Помощь");
menuBar.add(fileMenu1);

// Добавление пунктов меню About,Add и Exit.

JMenuItem ponItem = new JMenuItem("Понедельник");
ponItem.addActionListener(new ActionListener() {

public void actionPerformed(ActionEvent event) {
if(dialog == null) // в первый раз
dialog = new AboutDialog(DialogFrame.this);
dialog.setVisible(true); // отобразить диалог
}
});
fileMenu.add(ponItem);

JMenuItem vtorItem= new JMenuItem("Вторник");
vtorItem.addActionListener(new ActionListener() {
public void actionPerformed(ActionEvent event) {
if(dialog == null)
dialog = new AboutDialog(DialogFrame.this);
dialog.setVisible(true);
}

});
fileMenu.add(vtorItem);


JMenuItem sreda= new JMenuItem("Среда");
sreda.addActionListener(new ActionListener() {
public void actionPerformed(ActionEvent event) {
if(dialog == null)
dialog = new AboutDialog(DialogFrame.this);
dialog.setVisible(true);
}

});
fileMenu.add(sreda);


JMenuItem chetverg= new JMenuItem("Четверг");
chetverg.addActionListener(new ActionListener() {
public void actionPerformed(ActionEvent event) {
if(dialog == null)
dialog = new AboutDialog(DialogFrame.this);
dialog.setVisible(true);
}

});
fileMenu.add(chetverg);



JMenuItem pytnica= new JMenuItem("Пятница");
pytnica.addActionListener(new ActionListener() {
public void actionPerformed(ActionEvent event) {
if(dialog == null)
dialog = new AboutDialog(DialogFrame.this);
dialog.setVisible(true);
}

});
fileMenu.add(pytnica);




JMenuItem subbota= new JMenuItem("Суббота");
subbota.addActionListener(new ActionListener() {
public void actionPerformed(ActionEvent event) {
if(dialog == null)
dialog = new AboutDialog(DialogFrame.this);
dialog.setVisible(true);
}

});
fileMenu.add(subbota);





JMenuItem voskresene= new JMenuItem("Воскресенье");
voskresene.addActionListener(new ActionListener() {
public void actionPerformed(ActionEvent event) {
if(dialog == null)
dialog = new AboutDialog(DialogFrame.this);
dialog.setVisible(true);
}

});
fileMenu.add(voskresene);




// При активации пункта Exit программа завершается.

JMenuItem exitItem = new JMenuItem("Exit");
exitItem.addActionListener(new ActionListener() {

public void actionPerformed(ActionEvent event) {
System.exit(0);
}
});
fileMenu1.add(exitItem);
}

public static final int DEFAULT_WIDTH = 800;
public static final int DEFAULT_HEIGHT = 600;

private AboutDialog dialog;
}

/*
* Модальное диалоговое окно отображает сообщение
* и ожидает щелчка на кнопке ОК.
*/

class AboutDialog extends JDialog
{
public AboutDialog(JFrame owner)
{
super(owner, "About DialogTest", true);

// Метка с HTML-форматированием выравнивается по центру.

add(new JLabel("Ogo Vot eto da"),
BorderLayout.NORTH );



// При активизации кнопки ОК диалогове окно закрывается.

JButton ok = new JButton("ok");
ok.addActionListener(new ActionListener() {

public void actionPerformed(ActionEvent event) {
setVisible(false);
}


});

// Кнопка ОК помещается в нижнюю часть окна.
 
JPanel panel = new JPanel();
panel.add(ok);
add(panel, BorderLayout.SOUTH);
setSize(960, 760);
}
}